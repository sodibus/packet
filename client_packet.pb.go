// Code generated by protoc-gen-go.
// source: client_packet.proto
// DO NOT EDIT!

/*
Package packet is a generated protocol buffer package.

It is generated from these files:
	client_packet.proto
	cluster_packet.proto
	shared.proto

It has these top-level messages:
	PacketHandshake
	PacketReady
	PacketCallerSend
	PacketCallerRecv
	PacketCalleeRecv
	PacketCalleeSend
	ClusterPacketNodeInfo
	ClusterPacketNodeInfoBatch
	ClusterPacketCalleeInfo
	ClusterPacketCalleeInfoBatch
	ClusterPacketCalleeRemove
	ClusterPacketInvocation
	ClusterPacketResult
	InvocationId
	CalleeId
	Invocation
*/
package packet

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// handshake packet
//
// client will send a Init once connection established.
// client has to declare it's mode, either a 'caller', who sends invocations, or a 'callee', who execute invocations and returns values.
type PacketHandshake struct {
	Mode     ClientMode `protobuf:"varint,1,opt,name=mode,enum=sodibus.ClientMode" json:"mode,omitempty"`
	Provides []string   `protobuf:"bytes,2,rep,name=provides" json:"provides,omitempty"`
}

func (m *PacketHandshake) Reset()                    { *m = PacketHandshake{} }
func (m *PacketHandshake) String() string            { return proto.CompactTextString(m) }
func (*PacketHandshake) ProtoMessage()               {}
func (*PacketHandshake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PacketHandshake) GetMode() ClientMode {
	if m != nil {
		return m.Mode
	}
	return ClientMode_CALLER
}

func (m *PacketHandshake) GetProvides() []string {
	if m != nil {
		return m.Provides
	}
	return nil
}

// ready packet
//
// SODIBus will send a PacketReady after handshake ready
type PacketReady struct {
	Mode     ClientMode `protobuf:"varint,1,opt,name=mode,enum=sodibus.ClientMode" json:"mode,omitempty"`
	NodeId   uint64     `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ClientId uint64     `protobuf:"varint,3,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
}

func (m *PacketReady) Reset()                    { *m = PacketReady{} }
func (m *PacketReady) String() string            { return proto.CompactTextString(m) }
func (*PacketReady) ProtoMessage()               {}
func (*PacketReady) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PacketReady) GetMode() ClientMode {
	if m != nil {
		return m.Mode
	}
	return ClientMode_CALLER
}

func (m *PacketReady) GetNodeId() uint64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *PacketReady) GetClientId() uint64 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

// invocation packet
//
// caller client send invocation packet when it wants to invoke a service
type PacketCallerSend struct {
	Id         uint64      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Invocation *Invocation `protobuf:"bytes,2,opt,name=invocation" json:"invocation,omitempty"`
}

func (m *PacketCallerSend) Reset()                    { *m = PacketCallerSend{} }
func (m *PacketCallerSend) String() string            { return proto.CompactTextString(m) }
func (*PacketCallerSend) ProtoMessage()               {}
func (*PacketCallerSend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PacketCallerSend) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PacketCallerSend) GetInvocation() *Invocation {
	if m != nil {
		return m.Invocation
	}
	return nil
}

// invocation result packet
//
// caller client send receives result packet when invocation finished
type PacketCallerRecv struct {
	Id     uint64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Code   ErrorCode `protobuf:"varint,2,opt,name=code,enum=sodibus.ErrorCode" json:"code,omitempty"`
	Result string    `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
}

func (m *PacketCallerRecv) Reset()                    { *m = PacketCallerRecv{} }
func (m *PacketCallerRecv) String() string            { return proto.CompactTextString(m) }
func (*PacketCallerRecv) ProtoMessage()               {}
func (*PacketCallerRecv) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PacketCallerRecv) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PacketCallerRecv) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_OK
}

func (m *PacketCallerRecv) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

// invocation recieved by Callee
type PacketCalleeRecv struct {
	Id         *InvocationId `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Invocation *Invocation   `protobuf:"bytes,2,opt,name=invocation" json:"invocation,omitempty"`
}

func (m *PacketCalleeRecv) Reset()                    { *m = PacketCalleeRecv{} }
func (m *PacketCalleeRecv) String() string            { return proto.CompactTextString(m) }
func (*PacketCalleeRecv) ProtoMessage()               {}
func (*PacketCalleeRecv) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PacketCalleeRecv) GetId() *InvocationId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PacketCalleeRecv) GetInvocation() *Invocation {
	if m != nil {
		return m.Invocation
	}
	return nil
}

// invocation result sent by Callee
type PacketCalleeSend struct {
	Id     *InvocationId `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Result string        `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *PacketCalleeSend) Reset()                    { *m = PacketCalleeSend{} }
func (m *PacketCalleeSend) String() string            { return proto.CompactTextString(m) }
func (*PacketCalleeSend) ProtoMessage()               {}
func (*PacketCalleeSend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PacketCalleeSend) GetId() *InvocationId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PacketCalleeSend) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*PacketHandshake)(nil), "sodibus.PacketHandshake")
	proto.RegisterType((*PacketReady)(nil), "sodibus.PacketReady")
	proto.RegisterType((*PacketCallerSend)(nil), "sodibus.PacketCallerSend")
	proto.RegisterType((*PacketCallerRecv)(nil), "sodibus.PacketCallerRecv")
	proto.RegisterType((*PacketCalleeRecv)(nil), "sodibus.PacketCalleeRecv")
	proto.RegisterType((*PacketCalleeSend)(nil), "sodibus.PacketCalleeSend")
}

func init() { proto.RegisterFile("client_packet.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x41, 0x6b, 0xc2, 0x30,
	0x14, 0xc7, 0xb1, 0x96, 0xaa, 0xcf, 0xe1, 0x46, 0x64, 0x5b, 0xd1, 0x8b, 0x14, 0xdc, 0x3c, 0xf5,
	0xa0, 0xdf, 0x60, 0x32, 0x58, 0x0f, 0x83, 0x2d, 0x83, 0x0d, 0x76, 0x91, 0xd8, 0xf7, 0x98, 0xc1,
	0x9a, 0x48, 0x52, 0x05, 0xbf, 0xfd, 0x30, 0x91, 0x4e, 0xd9, 0x0e, 0xb2, 0x53, 0x79, 0x79, 0xaf,
	0xbf, 0xff, 0xfb, 0x85, 0x40, 0x37, 0x2f, 0x24, 0xa9, 0x72, 0xb6, 0x16, 0xf9, 0x92, 0xca, 0x74,
	0x6d, 0x74, 0xa9, 0x59, 0xc3, 0x6a, 0x94, 0xf3, 0x8d, 0xed, 0x5d, 0xd8, 0x85, 0x30, 0x84, 0xfe,
	0x38, 0x79, 0x87, 0xcb, 0x17, 0x37, 0xf6, 0x24, 0x14, 0xda, 0x85, 0x58, 0x12, 0xbb, 0x87, 0x70,
	0xa5, 0x91, 0xe2, 0xda, 0xa0, 0x36, 0xea, 0x8c, 0xbb, 0xe9, 0xe1, 0xc7, 0x74, 0xea, 0xa8, 0xcf,
	0x1a, 0x89, 0xbb, 0x01, 0xd6, 0x83, 0xe6, 0xda, 0xe8, 0xad, 0x44, 0xb2, 0x71, 0x30, 0xa8, 0x8f,
	0x5a, 0xbc, 0xaa, 0x93, 0x02, 0xda, 0x9e, 0xcb, 0x49, 0xe0, 0xee, 0x7c, 0xe6, 0x2d, 0x34, 0x94,
	0x46, 0x9a, 0x49, 0x8c, 0x83, 0x41, 0x6d, 0x14, 0xf2, 0x68, 0x5f, 0x66, 0xc8, 0xfa, 0xd0, 0x3a,
	0x68, 0x49, 0x8c, 0xeb, 0xae, 0xd5, 0xf4, 0x07, 0x19, 0x26, 0x1f, 0x70, 0xe5, 0xd3, 0xa6, 0xa2,
	0x28, 0xc8, 0xbc, 0x91, 0x42, 0xd6, 0x81, 0x40, 0xa2, 0x0b, 0x0c, 0x79, 0x20, 0x91, 0x4d, 0x00,
	0xa4, 0xda, 0xea, 0x5c, 0x94, 0x52, 0x2b, 0x07, 0x6f, 0x1f, 0x2d, 0x92, 0x55, 0x2d, 0x7e, 0x34,
	0x96, 0xcc, 0x4f, 0xc1, 0x9c, 0xf2, 0xed, 0x2f, 0xf0, 0x1d, 0x84, 0xf9, 0xde, 0x2d, 0x70, 0x6e,
	0xac, 0x42, 0x3e, 0x1a, 0xa3, 0xcd, 0xd4, 0xa9, 0xed, 0xfb, 0xec, 0x06, 0x22, 0x43, 0x76, 0x53,
	0x94, 0x6e, 0xfd, 0x16, 0x3f, 0x54, 0x89, 0x3a, 0xc9, 0x20, 0x97, 0x31, 0xac, 0x32, 0xda, 0xe3,
	0xeb, 0x3f, 0x96, 0xcc, 0xf0, 0xff, 0x4e, 0xaf, 0xa7, 0x79, 0xee, 0xb2, 0xce, 0xcc, 0xfb, 0x51,
	0x08, 0x8e, 0x15, 0x1e, 0x86, 0xd0, 0xb7, 0x3b, 0x5b, 0xd2, 0xca, 0xa6, 0x2b, 0xf1, 0x25, 0x2b,
	0x80, 0x7f, 0x81, 0x9f, 0x91, 0xff, 0xce, 0x23, 0xf7, 0xe6, 0x26, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x9b, 0xe0, 0xe0, 0xc4, 0xa1, 0x02, 0x00, 0x00,
}
